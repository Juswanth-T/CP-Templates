{


	  "BinarySeach": {
		"prefix": "binarysearch",
		"body": [
		  "// <---------------- Try to Write a Check function ---------------> ",
		  "",
		  "// Form 1 (Flow from F to T)",
		  "// r is the answer",
		  "int l = st, r = ed;   ${1:// Modify 1} ",
		  "",
		  "while(true){",
		  "",
		  "  if(l > r){r = -1;break;} // This can only happen if the initial value of l is greater than r",
		  "  int mid = l + (r-l)/2;",
		  "  if(check(mid)) r = mid;",
		  "  else l = mid;",
		  "  if(r-l<= 1){",
		  "      if(check(l)) r = l;       // Case 2",
		  "      else if(!check(r)) r = -1 // Case 3 (Answer doesn't exist)",
		  "      break;",
		  "  } ",
		  "",
		  "}",
		  "",
		  "cout<<r<<endl;",
		  "",
		  "// Ideally r should give the correct answer as the nature of flow is from F to T (You will try to get the leftmost T)",
		  "// FFFFTTTTTTTT  -> In this case r correctly lands at first T  => Case 1",
		  "// TTTTTTTTTTTT  -> In this case r wrongly lands at the 2nd T  => Case 2",
		  "// FFFFFFFFFFFF  -> In this case r wrongly lands at a False    => Case 3",
		  "",
		  "",
		  "",
		  "",
		  "// Form 2 (Flow from T to F)",
		  "// l is the answer",
		  "int l = st, r = ed;  ${2:// Modify 2}",
		  "",
		  "while(true){",
		  "",
		  "  if(l > r){l = -1;break;} // This can only happen if the initial value of l is greater than r",
		  "  int mid = l + (r-l)/2;",
		  "  if(check(mid)) l = mid;",
		  "  else r = mid;",
		  "  if(r-l<= 1){",
		  "      if(check(r)) l = r;       // Case 2",
		  "      else if(!check(l)) l = -1 // Case 3 (Answer doesn't exist)",
		  "      break;",
		  "  } ",
		  "",
		  "}",
		  "",
		  "cout<<r<<endl;",
		  "",
		  "// Ideally l should give the correct answer as the nature of flow is from T to F (You try to get the rightmost T)",
		  "// TTTTFFFFFFFF  -> In this case l correctly lands at last T       => Case 1",
		  "// TTTTTTTTTTTT  -> In this case l wrongly lands at second last T  => Case 2",
		  "// FFFFFFFFFFFF  -> In this case l wrongly lands at a False        => Case 3"
		],
		"description": "BinarySeach"
	  }
}
